from unit import Ghost
from terrain import Wall, Grass, Key, Trap, Door
from field import Cell, Field
from constants import HIT_POINTS


class GameController:
    # –¥–ª–∏–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    # –ø—Ä–µ–¥–ª–∞–≥–∞—é —É–±—Ä–∞—Ç—å hero: Ghost = None(—Å–º. –Ω–∏–∂–µ), hp=HIT_POINTS(—Ç.–∫. –º—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–≥–æ –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç)
    def __init__(self, maze: str, hero: Ghost = None, hp=HIT_POINTS):
        self.mapping = {
            "Wall": "üî≤",
            "Grass": "üçÄ",  # '‚¨úÔ∏è',
            "Ghost": "üëª",
            "Key": "üóù",
            "Door": "üö™",
            "Trap": "üíÄ",
        }
        self.game_on = True
        self.hero = hero
        self.field = None
        self.make_field(maze, hp=hp)

    @staticmethod
    def _make_field_template(template: str) -> list:
        return [[i for i in line.strip()] for line in template.strip().split("\n")]

    # –ó–∞–ø–∞—Ö "–î–ª–∏–Ω–Ω—ã–π –º–µ—Ç–æ–¥". –í –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã:
        # 1. —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –º–∞—Å—Å–∏–≤–æ–≤ –∏–∑ –æ–±—ä–µ–∫—Ç–æ–≤ Cell
        # 2. –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–ª–∞—Å—Å–∞ GameController.field
        # 3. (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ—É–º–µ—Å—Ç–Ω–æ –∏ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è)
        # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä if not self.hero:
        #                                  self.hero = Ghost([item_n, line_n], hp=hp)
    # –ü—Ä–µ–¥–ª–∞–≥–∞—é:
        # 1. –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å.
        # 2. class GameController:
        #     def __init__(self, maze: str, hp=HIT_POINTS):
        #         self.hero = Ghost([-1, -1], hp=hp)
        #         self.field = Field(field=make_field(maze), unit=self.hero, cols=len(fields[0]), rows=len(fields))
        #     –ü—Ä–∏ —ç—Ç–æ–º make_field –¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å field —Å —è—á–µ–π–∫–∞–º–∏ Cell —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –ø–µ—Ä–µ–¥–∞–ª–∏—Å—å –ª–∏
        #     –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ self.hero(–±—ã–ª –ª–∏ –≤–æ–æ–±—â–µ –≥–µ—Ä–æ–π –Ω–∞ –∫–∞—Ä—Ç–µ).
        #     if self.hero.coord == [-1,-1]:
        #         raise WrongMaze as e:
        #           print(e)
        # 3. –í —Ñ—É–Ω–∫—Ü–∏–∏ make_field, –¥—É–º–∞—é, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–π—Å—Ç–≤–æ —Å–≤–æ–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞, –∞ –Ω–µ –≤–µ—Å—å –∫–ª–∞—Å—Å:
        #         def make_field(self, level_string: str):
        #                     if item == 'G':
        #                         field_line.append(Cell(Grass()))
        #                         self.hero.coord = Ghost([item_n, line_n])
    # –ù–µ –∑–Ω–∞—é –∫–∞–∫–æ–π –∑–∞–ø–∞—Ö.
    #   –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è item_n, line_n –±–µ–∑ –∫–æ–¥–∞ –Ω–µ –ø–æ–π–º–µ—à—å.
    # –ü—Ä–µ–¥–ª–∞–≥–∞—é:
    #   –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ x_coord, y_coord, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏, –ø–æ —Å—É—Ç–∏, –≤ –Ω–∞—à–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ,
    #   –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–µ
    def make_field(self, level_string: str, hp: int):
        field_template = self._make_field_template(level_string)
        fields = []
        for line_n, line in enumerate(field_template):
            field_line = []
            for item_n, item in enumerate(line):
                if item == "W":
                    field_line.append(Cell(Wall()))
                if item == "g":
                    field_line.append(Cell(Grass()))
                if item == "G":
                    field_line.append(Cell(Grass()))
                    if not self.hero:
                        self.hero = Ghost([item_n, line_n], hp=hp)
                if item == "K":
                    field_line.append(Cell(Key()))
                if item == "D":
                    field_line.append(Cell(Door()))
                if item == "T":
                    field_line.append(Cell(Trap()))
            fields.append(field_line)

        self.field = Field(field=fields, unit=self.hero)

    # –¥–ª–∏–Ω–Ω—ã–π –º–µ—Ç–æ–¥
    # —Ç.–∫. Play –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—â—É—é –∏–≥—Ä–æ–≤—É—é –ª–æ–≥–∏–∫—É, –ø—Ä–µ–¥–ª–∞–≥–∞—é –≤—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    def play(self):
        self._draw_field()
        while self.game_on and not self.hero.escaped:
            command = input()
            if command == "a":
                self.field.move_unit_left()
            if command == "w":
                self.field.move_unit_up()
            if command == "d":
                self.field.move_unit_right()
            if command == "s":
                self.field.move_unit_down()
            if command in ["stop", "exit"]:
                self.game_on = False

            self._draw_field()

        if self.hero.escaped:
            print("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –Ω–∞—à–ª–∏ –≤—ã—Ö–æ–¥!")

        if not self.game_on:
            print("–ù–∞–º –∂–∞–ª—å, —á—Ç–æ –í—ã —É—Ö–æ–¥–∏—Ç–µ. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –µ—â–µ!")

    def _draw_field(self):
        for y, line in enumerate(self.field.get_field()):
            s = ""
            for x, item in enumerate(line):
                if self.hero.has_position(x, y):
                    s += self.mapping["Ghost"]
                else:
                    s += self.mapping[item.get_object().get_terrain()]
            print(s)
